================================= TEST CASES for 0-add_integer module ===============================

_______________________________________________________________________
case 0: importing
	>>> add_integer = __import__('0-add_integer').add_integer

_______________________________________________________________________
case 1: Addition of  positive numbers
	>>> add_integer(2, 4)
	6

_______________________________________________________________________
case 2: Addition of one positive number and one negative one
	>>> add_integer(50, -10)
	40

_______________________________________________________________________
case 3: Addition of one argument with the default
	>>> add_integer(2)
	100

_______________________________________________________________________
case 4: Addition of a float and an integer
	>>> add_integer(10.5, -5)
	5

_______________________________________________________________________
case 5: No argument
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

_______________________________________________________________________
case 6: Addition of the first argument with a string
	>>> add_integer('alx_SE', 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

_______________________________________________________________________
case 7: Addition of the second Argument with a string
	>>> add_integer(2, 'alx_SE')
	Traceback (most recent call last):
        ...
        TypeError: b must be an integer

______________________________________________________________________
case 8: Overflow
	>>> add_integer(10e10000, 5)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

______________________________________________________________________
case 9: Adding (None)
	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
