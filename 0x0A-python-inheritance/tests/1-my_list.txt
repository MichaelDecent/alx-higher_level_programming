=================== Test Cases for MyList Module =====================

Case 0: importing the function

	>>> MyList = __import__('1-my_list').MyList

_________________________________________________________
Case 1: creating an instance of the class

	>>> my_list = MyList()

_________________________________________________________
Case 2: Appending integers and printing the list

	>>> my_list.append(100)
	>>> my_list.append(50)
	>>> my_list.append(10)
	>>> my_list.append(500)
	>>> my_list.append(15)
	>>> print(my_list)
	[100, 50, 10, 500, 15]

_________________________________________________________
Case 3: Printing a sorted list

	>>> my_list.print_sorted()
	[10, 15, 50, 100, 500]

_________________________________________________________
Case 4: passing an Empty List as an argument to the class

	>>> my_list = MyList([])
	>>> my_list.print_sorted()
	[]

_________________________________________________________
Case 5: Using a Non defined object

	>>> list2.print_sorted()
	Traceback (most recent call last):
  	...
	NameError: name 'list2' is not defined

_________________________________________________________
Case 6: passed a list

	>>> a = [1, 9, 4]
	>>> my_list = MyList(a)
	>>> my_list.print_sorted()
	[1, 4, 9]

_________________________________________________________
case 7: parent object
	>>> my_list = [1, 2, 3]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
  	  File "<stdin>", line 1, in <module>
	AttributeError: 'list' object has no attribute 'print_sorted'

_________________________________________________________
case 8: same number

	>>> my_list2 = MyList()
	>>> my_list2.append(1)
	>>> my_list2.append(1)
	>>> my_list2.append(1)
	>>> my_list2.append(1)
	>>> my_list2.print_sorted()
	[1, 1, 1, 1]

_________________________________________________________
case 9: negative numbers

	>>> MyList = __import__('1-my_list').MyList
	>>> my_list = MyList()
	>>> my_list.append(5)
	>>> my_list.append(1)
	>>> my_list.append(-1)
	>>> my_list.append(51)
	>>> my_list.append(-5)
	>>> my_list.print_sorted()
	[-5, -1, 1, 5, 51]

_________________________________________________________
case 5: unique number

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.print_sorted()
[1]
>>> print(my_list)
[1]
